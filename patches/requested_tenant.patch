Index: framework/webapp/src/org/ofbiz/webapp/control/ControlEventListener.java
===================================================================
--- framework/webapp/src/org/ofbiz/webapp/control/ControlEventListener.java	(revision 1470483)
+++ framework/webapp/src/org/ofbiz/webapp/control/ControlEventListener.java	(working copy)
@@ -81,6 +81,12 @@
                 if (visit != null) {
                     visit.set("thruDate", new Timestamp(session.getLastAccessedTime()));
                     visit.store();
+                    //also set hasLoggedOut as "Y"
+                    GenericValue userLoginMap = delegator.findOne("UserLogin", UtilMisc.toMap("userLoginId", visit.get("userLoginId")), false);
+                    if (UtilValidate.isNotEmpty(userLoginMap)) {
+                        userLoginMap.set("hasLoggedOut", "Y");
+                        userLoginMap.store();
+                    }
                 }
             } else {
                 Debug.logWarning("Could not find visit value object in session [" + session.getId() + "] that is being destroyed", module);
Index: framework/webapp/src/org/ofbiz/webapp/control/ContextFilter.java
===================================================================
--- framework/webapp/src/org/ofbiz/webapp/control/ContextFilter.java	(revision 1470483)
+++ framework/webapp/src/org/ofbiz/webapp/control/ContextFilter.java	(working copy)
@@ -260,16 +260,27 @@
             // get tenant delegator by domain name
             String serverName = httpRequest.getServerName();
             try {
+               // first set the delegator to default
+                String delegatorName = config.getServletContext().getInitParameter("entityDelegatorName");
+
+                if (delegatorName == null || delegatorName.length() <= 0) {
+                    delegatorName = "default";
+                }
+                if (Debug.verboseOn()) Debug.logVerbose("Setup Entity Engine Delegator with name " + delegatorName, module);
+                Delegator delegator = DelegatorFactory.getDelegator(delegatorName);
+                config.getServletContext().setAttribute("delegator", delegator);
+                if (delegator == null) {
+                    Debug.logError("[ContextFilter.init] ERROR: delegator factory returned null for delegatorName \"" + delegatorName + "\"", module);
+                }
                 // if tenant was specified, replace delegator with the new per-tenant delegator and set tenantId to session attribute
-                Delegator delegator = getDelegator(config.getServletContext());
-                List<GenericValue> tenants = delegator.findList("Tenant", EntityCondition.makeCondition("domainName", serverName), null, UtilMisc.toList("-createdStamp"), null, false);
-                if (UtilValidate.isNotEmpty(tenants)) {
-                    GenericValue tenant = EntityUtil.getFirst(tenants);
-                    String tenantId = tenant.getString("tenantId");
+                List<GenericValue> tenantDomainNames = delegator.findList("TenantDomainName", EntityCondition.makeCondition("domainName", serverName), null, UtilMisc.toList("-createdStamp"), null, false);
+                if (UtilValidate.isNotEmpty(tenantDomainNames)) {
+                    GenericValue tenantDomainName = EntityUtil.getFirst(tenantDomainNames);
+                    String tenantId = tenantDomainName.getString("tenantId");
 
                     // if the request path is a root mount then redirect to the initial path
                     if (UtilValidate.isNotEmpty(requestPath) && requestPath.equals(contextUri)) {
-                        String initialPath = tenant.getString("initialPath");
+                        String initialPath = tenantDomainName.getString("initialPath");
                         if (UtilValidate.isNotEmpty(initialPath) && !"/".equals(initialPath)) {
                             ((HttpServletResponse)response).sendRedirect(initialPath);
                             return;
@@ -282,23 +293,25 @@
 
                     // after this line the delegator is replaced with the new per-tenant delegator
                     delegator = DelegatorFactory.getDelegator(tenantDelegatorName);
-                    config.getServletContext().setAttribute("delegator", delegator);
-
-                    // clear web context objects
-                    config.getServletContext().setAttribute("security", null);
-                    config.getServletContext().setAttribute("dispatcher", null);
-
-                    // initialize security
-                    Security security = getSecurity();
-                    // initialize the services dispatcher
-                    LocalDispatcher dispatcher = getDispatcher(config.getServletContext());
-
-                    // set web context objects
-                    request.setAttribute("dispatcher", dispatcher);
-                    request.setAttribute("security", security);
                     
                     request.setAttribute("tenantId", tenantId);
                 }
+                
+                config.getServletContext().setAttribute("delegator", delegator);
+                
+                // clear web context objects
+                config.getServletContext().setAttribute("authorization", null);
+                config.getServletContext().setAttribute("security", null);
+                config.getServletContext().setAttribute("dispatcher", null);
+                
+                // initialize security
+                Security security = getSecurity();
+                // initialize the services dispatcher
+                LocalDispatcher dispatcher = getDispatcher(config.getServletContext());
+                
+                // set web context objects
+                httpRequest.getSession().setAttribute("dispatcher", dispatcher);
+                httpRequest.getSession().setAttribute("security", security);
 
                 // NOTE DEJ20101130: do NOT always put the delegator name in the user's session because the user may 
                 // have logged in and specified a tenant, and even if no Tenant record with a matching domainName field 
Index: framework/common/webcommon/login.ftl
===================================================================
--- framework/common/webcommon/login.ftl	(revision 1470483)
+++ framework/common/webcommon/login.ftl	(working copy)
@@ -42,6 +42,7 @@
             <td class="label">${uiLabelMap.CommonPassword}</td>
             <td><input type="password" name="PASSWORD" value="" size="20"/></td>
           </tr>
+          <#--
           <#if ("Y" == useMultitenant) >
               <#if !requestAttributes.tenantId?exists>
                   <tr>
@@ -52,6 +53,7 @@
                   <input type="hidden" name="tenantId" value="${requestAttributes.tenantId?if_exists}"/>
               </#if>
           </#if>
+          -->
           <tr>
             <td colspan="2" align="center">
               <input type="submit" value="${uiLabelMap.CommonLogin}"/>
Index: framework/common/src/org/ofbiz/common/UrlServletHelper.java
===================================================================
--- framework/common/src/org/ofbiz/common/UrlServletHelper.java	(revision 1470483)
+++ framework/common/src/org/ofbiz/common/UrlServletHelper.java	(working copy)
@@ -55,20 +55,31 @@
             // get tenant delegator by domain name
             String serverName = request.getServerName();
             try {
+                // first set the delegator to default
+                String delegatorName = servletContext.getInitParameter("entityDelegatorName");
+
+                if (delegatorName == null || delegatorName.length() <= 0) {
+                    delegatorName = "default";
+                }
+                if (Debug.verboseOn()) Debug.logVerbose("Setup Entity Engine Delegator with name " + delegatorName, module);
+                delegator = DelegatorFactory.getDelegator(delegatorName);
+                servletContext.setAttribute("delegator", delegator);
+                if (delegator == null) {
+                    Debug.logError("[ContextFilter.init] ERROR: delegator factory returned null for delegatorName \"" + delegatorName + "\"", module);
+                }
+                
                 // if tenant was specified, replace delegator with the new per-tenant delegator and set tenantId to session attribute
-                delegator = getDelegator(servletContext);
-                List<GenericValue> tenants = delegator.findList("Tenant", EntityCondition.makeCondition("domainName", serverName), null, UtilMisc.toList("-createdStamp"), null, false);
-                if (UtilValidate.isNotEmpty(tenants)) {
-                    GenericValue tenant = EntityUtil.getFirst(tenants);
-                    String tenantId = tenant.getString("tenantId");
+                List<GenericValue> tenantDomainNames = delegator.findList("TenantDomainName", EntityCondition.makeCondition("domainName", serverName), null, UtilMisc.toList("-createdStamp"), null, false);
+                if (UtilValidate.isNotEmpty(tenantDomainNames)) {
+                    GenericValue tenantDomainName = EntityUtil.getFirst(tenantDomainNames);
+                    String tenantId = tenantDomainName.getString("tenantId");
                     
                     // make that tenant active, setup a new delegator and a new dispatcher
-                    String tenantDelegatorName = delegator.getDelegatorBaseName() + "#" + tenantId;
-                    httpRequest.getSession().setAttribute("delegatorName", tenantDelegatorName);
+                    delegatorName = delegator.getDelegatorBaseName() + "#" + tenantId;
+                    httpRequest.getSession().setAttribute("delegatorName", delegatorName);
                 
                     // after this line the delegator is replaced with the new per-tenant delegator
-                    delegator = DelegatorFactory.getDelegator(tenantDelegatorName);
-                    servletContext.setAttribute("delegator", delegator);
+                    delegator = DelegatorFactory.getDelegator(delegatorName);
                 }
                 
             } catch (GenericEntityException e) {
@@ -79,6 +90,7 @@
         // set the web context in the request for future use
         request.setAttribute("servletContext", httpRequest.getSession().getServletContext());
         request.setAttribute("delegator", delegator);
+        servletContext.setAttribute("delegator", delegator);
 
         // set the webSiteId in the session
         if (UtilValidate.isEmpty(httpRequest.getSession().getAttribute("webSiteId"))){
