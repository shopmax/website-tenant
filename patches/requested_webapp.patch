Index: framework/webapp/src/org/ofbiz/webapp/control/LoginWorker.java
===================================================================
--- framework/webapp/src/org/ofbiz/webapp/control/LoginWorker.java	(revision 1447126)
+++ framework/webapp/src/org/ofbiz/webapp/control/LoginWorker.java	(working copy)
@@ -60,6 +60,7 @@
 import org.ofbiz.entity.serialize.XmlSerializer;
 import org.ofbiz.entity.transaction.GenericTransactionException;
 import org.ofbiz.entity.transaction.TransactionUtil;
+import org.ofbiz.entity.util.EntityUtil;
 import org.ofbiz.security.Security;
 import org.ofbiz.security.SecurityConfigurationException;
 import org.ofbiz.security.SecurityFactory;
@@ -290,6 +291,7 @@
     public static String login(HttpServletRequest request, HttpServletResponse response) {
         HttpSession session = request.getSession();
 
+        String sessionId = session.getId();
         String username = request.getParameter("USERNAME");
         String password = request.getParameter("PASSWORD");
 
@@ -401,6 +403,28 @@
 
         if (ModelService.RESPOND_SUCCESS.equals(result.get(ModelService.RESPONSE_MESSAGE))) {
             GenericValue userLogin = (GenericValue) result.get("userLogin");
+            //check user login from instance browser
+            /*
+            if (userLogin != null) {
+                try {
+                    List<GenericValue> visitList = delegator.findByAnd("Visit", UtilMisc.toMap("userLoginId", userLogin.getString("userLoginId")
+                            ,"thruDate",null), UtilMisc.toList("-fromDate"), null, false);
+                    if (UtilValidate.isNotEmpty(visitList)) {
+                        GenericValue visitMap = EntityUtil.getFirst(visitList);
+                        GenericValue chechLoggedOutMap = delegator.findByPrimaryKey("UserLogin", UtilMisc.toMap("userLoginId", username));
+                        String hasLoggedOut = chechLoggedOutMap.getString("hasLoggedOut");
+                        if (hasLoggedOut != null && "N".equals(hasLoggedOut) && !sessionId.equals(visitMap.getString("sessionId"))) {
+                            request.setAttribute("_ERROR_MESSAGE_", "User has Log on into the application Now.");
+                            return "error";
+                        }
+                    }
+                } catch (Exception e) {
+                    Debug.logInfo("error :" + e.getMessage(), module);
+                    request.setAttribute("_ERROR_MESSAGE_", e.getMessage());
+                    return "error";
+                }
+            }
+            */
 
             if ("Y".equals(request.getParameter("requirePasswordChange"))) {
                 Map<String, Object> inMap = UtilMisc.<String, Object>toMap("login.username", username, "login.password", password, "locale", UtilHttp.getLocale(request));
@@ -617,9 +641,11 @@
         if (currCatalog != null) session.setAttribute("CURRENT_CATALOG_ID", currCatalog);
         if (delegatorName != null) {
             // if there is a tenantId in the delegatorName remove it now so that tenant selection doesn't last beyond logout
+            /*
             if (delegatorName.indexOf('#') > 0) {
                 delegatorName = delegatorName.substring(0, delegatorName.indexOf('#'));
             }
+            */
             session.setAttribute("delegatorName", delegatorName);
 
             delegator = DelegatorFactory.getDelegator(delegatorName);
@@ -992,7 +1018,7 @@
                 contextPath = "/";
             }
             
-            ComponentConfig.WebappInfo info = ComponentConfig.getWebAppInfo(serverId, contextPath);
+            ComponentConfig.WebappInfo info = ComponentConfig.getWebAppInfo(serverId, request.getServerName(), contextPath);
             if (info != null) {
                 for (String permission: info.getBasePermission()) {
                     if (!"NONE".equals(permission) && !security.hasEntityPermission(permission, "_VIEW", userLogin)) {
